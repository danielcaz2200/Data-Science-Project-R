setwd("C:/Users/danc2/Desktop/SPRING_2023/CPSC_375/375_Project")
covid <- read_csv("owd-covid-data.csv")
library(tidyverse)
library(ggplot2)
library(modelr)
covid_data <- read_csv("owd-covid-data.csv")
covid_data <- read_csv("owid-covid-data.csv")
demographics <- read_csv("demographics.csv")
demographics
demographics <- demographics %>% filter(nchar("Country Code") == 3)
demographics %>% View()
demographics <- read_csv("demographics.csv")
demographics %>% View()
colnames(demographics)
demographics %>% filter(nchar("Country Code") == 3)
demographics %>% filter(nchar("Country Code") == 3) %>% View()
demographics %>% filter(nchar(`Country Code`) == 3) %>% View()
demographics <- demographics %>% filter(nchar(`Country Code`) == 3)
demographics
demographics %>% filter("series code" == SP.POP.TOTL)
demographics %>% filter("series code" == "SP.POP.TOTL")
demographics %>% filter("series code" == "SP.POP.TOTL") %>% View()
demographics %>% filter(`series code` == "SP.POP.TOTL") %>% View()
demographics %>% filter(`series code` == "SP.POP.TOTL") %>% View()
demographics %>% filter(`Series Code` == "SP.POP.TOTL") %>% View()
demographics %>% filter(`Series Code` == "SP.POP.TOTL", YR2015 >= 1000000)
demographics <- demographics %>%
filter(`Series Code` == "SP.POP.TOTL", YR2015 >= 1000000)
demographics
covid_data
covid_data %>% view()
covid_data %>% View()
covid_data
covid_data
covid_data <- read_csv("owid-covid-data.csv")
covid_data %>% View()
covid_data
covid_data %>% View()
covid_data <- select(iso_code, location, date, new_cases, new_cases_smoothed, new_deaths_smoothed, total_vaccinations)
covid_data
covid_data %>% select(iso_code, location, date, new_cases,
new_cases_smoothed, new_deaths_smoothed, total_vaccinations)
covid_data %>% select(iso_code, location, date, new_cases, new_cases_smoothed, new_deaths_smoothed, total_vaccinations)
covid_data %>%
select(iso_code, location, date, new_cases, new_cases_smoothed, new_deaths_smoothed, total_vaccinations)
covid_data %>%
select(iso_code, location, date, new_cases, new_cases_smoothed, new_deaths_smoothed, total_vaccinations)
covid_data %>%
select(iso_code, location, date, new_cases, new_cases_smoothed, new_deaths_smoothed, total_vaccinations) %>% View()
covid_data <- covid_data %>%
select(iso_code, location, date, new_cases, new_cases_smoothed, new_deaths_smoothed, total_vaccinations)
covid_data %>% mutate(date = date - 14)
covid_data %>% mutate(date = date - 14) %>% filter(data >= as.Date("2023-01-01"))
covid_data %>% mutate(date = date - 14) %>% filter(date >= as.Date("2023-01-01"))
covid_data %>% mutate(date = date + 14)
covid_data %>% mutate(date = as.Date(date))
covid_data %>% mutate(date = as.Date(date))
covid_data %>% mutate(date = as.Date(date))
covid_data %>% mutate(date = as.Date(date))
covid_data %>% mutate(dateasDate = as.Date(date))
covid_data %>% mutate(date = as.Date(date))
covid_data %>%
mutate(date = date - 14)
covid_data %>%
mutate(date = date - 14) %>^ filter(date >= as.Date("2023-01-01"))
covid_data %>%
mutate(date = date - 14) %> filter(date >= as.Date("2023-01-01"))
covid_data %>%
mutate(date = date - 14) %> filter(date >= as.Date("2023-01-01"))
covid_data %>%
mutate(date = date - 14) %>% filter(date >= as.Date("2023-01-01"))
covid_data %>%
mutate(date = date + 14)
covid_data %>%
mutate(date = date - 14)
covid_data %>% mutate(new_deaths_smoothed_2wk = lead(new_deaths_smoothed, n=14))
covid_data
covid_data %>% mutate(new_deaths_smoothed_2wk = lead(new_deaths_smoothed, n=14)) %>%
View()
demographics
demographics <- demographics %>% pivot_wider(names_from = `Series Code`, values_from = YR2015)
demographics
demographics <- read_csv("demographics.csv")
demographics <- demographics %>% filter(nchar(`Country Code`) == 3)
demographics <- demographics %>%
filter(`Series Code` == "SP.POP.TOTL", YR2015 >= 1000000)
demographics %>% pivot_wider(names_from = `Series Code`, values_from = YR2015)
demographics %>% View()
demographics
demographics
demographics <- read_csv("demographics.csv")
demographics <- demographics %>% filter(nchar(`Country Code`) == 3)
demographics
demographics %>% group_by(`Country Name`) %>%
filter(`Series Code` == "SP.POP.TOTL", YR2015 >= 1000000)
demographics %>% group_by(`Country Name`) %>%
filter(`Series Code` == "SP.POP.TOTL", YR2015 >= 1000000) %>% ungroup()
pop_filter <- demographics %>%
filter(`Series Code` == "SP.POP.TOTL" & YR2015 >= 1000000) %>%
select(`Country Name`)
pop_filter
pop_filter %>% View()
demographics <- demographics %>%
filter(`Country Name` %in% pop_filter$`Country Name`)
demographics
demographics %>% select(`Country Name`, `Country Code`, `Series Code`, YR2015)
demographics %>% pivot_wider(names_from = `Series Code`, values_from = `YR2015`)
demographics %>% pivot_wider(names_from = `Series Code`, values_from = YR2015)
demographics <- demographics %>% select(`Country Name`, `Country Code`, `Series Code`, YR2015)
demographics
demographics %>% pivot_wider(names_from = `Series Code`, values_from = YR2015)
demographics %>% pivot_wider(names_from = `Series Code`, values_from = YR2015) %>% View()
covid_data
demographics
band_members
band_instruments
band_instruments2
covid_data %>% inner_join(demographics, by=c(iso_code = "Country Code"))
covid_data %>% inner_join(demographics, by=c(`Country Code` = iso_code))
covid_data %>% inner_join(demographics, by=c(iso_code = "Country Code"))
covid_data %>% inner_join(demographics, by=c(iso_code = "Country Code", location = `Country Name`))
covid_data %>% inner_join(demographics, by=c(iso_code = "Country Code", location = "Country Name"))
demographics <- demographics %>% pivot_wider(names_from = `Series Code`, values_from = YR2015)
covid_data %>% inner_join(demographics, by=c(iso_code = "Country Code", location = "Country Name"))
demographics <- demographics %>% filter(nchar(`Country Code`) == 3)
library(tidyverse)
library(ggplot2)
library(modelr)
covid_data <- read_csv("owid-covid-data.csv")
demographics <- read_csv("demographics.csv")
demographics <- demographics %>% filter(nchar(`Country Code`) == 3)
demographics
demographics
covid_data
demographics
demographics %>% View()
demographics
demographics %>% View()
demographics <- demographics %>% filter(`Series Code` == "SP.POP.TOTL" & YR2015 >= 1000000)
demographics
demographics <- read_csv("demographics.csv")
# Keep only the rows where country_code is 3 letters
demographics <- demographics %>% filter(nchar(`Country Code`) == 3)
pop_filter <- demographics %>%
filter(`Series Code` == "SP.POP.TOTL" & YR2015 >= 1000000) %>%
select(`Country Name`)
pop_filter
demographics
demographics %>% View()
demographics %>% View()
pop_filter
demographics %>%
filter(`Series Code` == "SP.POP.TOTL" & YR2015 >= 1000000)
demographics
colnames(demographics)
demographics %>% select(-`Series Name`)
demographics <- demographics %>% select(-`Series Name`)
demographics
colnames(covid_data)
covid_data %>% select(-c(total_deaths, new_deaths, total_deaths_per_million, new_deaths_per_million, new_deaths_smoothed_per_million))
covid_data %>% select(-c(total_deaths, new_deaths, total_deaths_per_million, new_deaths_per_million, new_deaths_smoothed_per_million)) %>% View()
covid_data %>% select(-c(total_deaths, new_deaths, total_deaths_per_million, new_deaths_per_million, new_deaths_smoothed_per_million)) %>% View()
covid_data <- covid_data %>% select(-c(total_deaths, new_deaths, total_deaths_per_million, new_deaths_per_million, new_deaths_smoothed_per_million))
colnames(covid_data)
ncol(covid_data)
covid_data <- covid_data %>% select(-c(excess_mortality_cumulative_absolute, excess_mortality_cumulative, excess_mortality, excess_mortality_cumulative_per_million))
ncol(covid_data)
covid_data %>% select(new_deaths_smoothed) %>% View()
covid_data %>% View()
covid_data %>% View()
covid_data %>% View()
covid_data_copy <- covid_data
covid_data_copy %>% mutate(date=date-14)
library(tidyverse)
library(ggplot2)
library(modelr)
# Read in both datasets
covid_data <- read_csv("owid-covid-data.csv")
demographics <- read_csv("demographics.csv")
# Keep only the rows where country_code is 3 letters
demographics <- demographics %>% filter(nchar(`Country Code`) == 3)
# Remove the countries whose total population is less than 1 million
pop_filter <- demographics %>%
filter(`Series Code` == "SP.POP.TOTL" & YR2015 >= 1000000) %>%
select(`Country Name`)
demographics <- demographics %>%
filter(`Country Name` %in% pop_filter$`Country Name`)
# Select all columns BUT Series Name
demographics <- demographics %>% select(-`Series Name`)
# Remove columns that should not be used for linear modeling // death and excess mortality cols
covid_data <- covid_data %>% select(-c(total_deaths, new_deaths, total_deaths_per_million, new_deaths_per_million, new_deaths_smoothed_per_million))
covid_data <- covid_data %>% select(-c(excess_mortality_cumulative_absolute, excess_mortality_cumulative, excess_mortality, excess_mortality_cumulative_per_million))
# Add new column new_deaths_smoothed_2wk that has the same values as
# new_deaths_smoothed but two weeks ahead
# covid_data <- covid_data %>%
#   mutate(new_deaths_smoothed_2wk = lead(new_deaths_smoothed, n=14))
covid_data_copy <- covid_data
covid_data_copy %>% mutate(date=date-14)
covid_data_copy
covid_data
covid_data_copy <- covid_data_copy %>% mutate(date=date-14)
covid_data_copy
covid_data
colnames(covid_data_copy)
covid_data_copy %>% rename(new_deaths_smoothed = new_deaths_smoothed_2wk)
covid_data_copy %>% rename(new_deaths_smoothed_2wk = new_deaths_smoothed)
covid_data %>% inner_join(covid_data_copy)
demographics
colnames(demographics)
covid_data
covid_data <- read_csv("owid-covid-data.csv")
demographics <- read_csv("demographics.csv")
library(tidyverse)
library(ggplot2)
library(modelr)
covid_data <- read_csv("owid-covid-data.csv")
demographics <- read_csv("demographics.csv")
# Keep only the rows where country_code is 3 letters
# demographics <- demographics %>% filter(nchar(`Country Code`) == 3)
colnames(covid_data)
# Keep only the rows where country_code is 3 letters
# demographics <- demographics %>% filter(nchar(`Country Code`) == 3)
covid_data
# Keep only the rows where country_code is 3 letters
# demographics <- demographics %>% filter(nchar(`Country Code`) == 3)
covid_data %>% filter(nchar(iso_code) == 3)
# Keep only the rows where country_code is 3 letters
# demographics <- demographics %>% filter(nchar(`Country Code`) == 3)
covid_data %>% filter(nchar(iso_code) == 3, population >= 1000000)
# Keep only the rows where country_code is 3 letters
# demographics <- demographics %>% filter(nchar(`Country Code`) == 3)
covid_data %>% filter(nchar(iso_code) == 3, population >= 1000000) %>% select(population)
# Keep only the rows where country_code is 3 letters
# demographics <- demographics %>% filter(nchar(`Country Code`) == 3)
covid_data %>% filter(nchar(iso_code) == 3, population >= 1000000) %>% View()
# Keep only the rows where country_code is 3 letters
# demographics <- demographics %>% filter(nchar(`Country Code`) == 3)
covid_data %>% filter(nchar(iso_code) == 3, population >= 1000000) %>% View()
# Keep only the rows where country_code is 3 letters
# demographics <- demographics %>% filter(nchar(`Country Code`) == 3)
covid_data <- covid_data %>% filter(nchar(iso_code) == 3, population >= 1000000)
# Keep only the rows where country_code is 3 letters
# demographics <- demographics %>% filter(nchar(`Country Code`) == 3)
covid_data <- covid_data %>% filter(nchar(iso_code) == 3, population >= 1000000)
# Read in both datasets
covid_data <- read_csv("owid-covid-data.csv")
# Keep only the rows where country_code is 3 letters
# demographics <- demographics %>% filter(nchar(`Country Code`) == 3)
covid_data <- covid_data %>% filter(nchar(iso_code) == 3, population >= 1000000)
# Select all columns BUT Series Name
demographics <- demographics %>% select(-`Series Name`)
covid_data <- covid_data %>% select(-c(total_deaths, new_deaths, total_deaths_per_million, new_deaths_per_million, new_deaths_smoothed_per_million))
covid_data <- covid_data %>% select(-c(excess_mortality_cumulative_absolute, excess_mortality_cumulative, excess_mortality, excess_mortality_cumulative_per_million))
# Add new column new_deaths_smoothed_2wk that has the same values as
# new_deaths_smoothed but two weeks ahead
# covid_data <- covid_data %>%
#   mutate(new_deaths_smoothed_2wk = lead(new_deaths_smoothed, n=14))
covid_data_copy <- covid_data
covid_data_copy <- covid_data_copy %>% mutate(date=date-14)
covid_data_copy %>% rename(new_deaths_smoothed_2wk = new_deaths_smoothed)
covid_data_copy <- covid_data_copy %>% rename(new_deaths_smoothed_2wk = new_deaths_smoothed)
covid_data_copy
covid_data %>% inner_join(covid_data_copy)
covid_data %>% inner_join(covid_data_copy) %>% View()
colnames(covid_data %>% inner_join(covid_data_copy))
covid_data %>% inner_join(covid_data_copy) %>% View()
covid_data_copy %>% View()
colnames(covid_data_copy)
covid_data_copy %>% select(new_deaths_smoothed_2wk)
covid_data_copy %>% select(new_deaths_smoothed_2wk) %>% View()
covid_data <- covid_data %>% inner_join(covid_data_copy)
# Tidy demographic table as needed
demographics <- demographics %>% pivot_wider(names_from = `Series Code`, values_from = YR2015)
demographics
covid_data %>% inner_join(demographics, by=c(iso_code = "Country Code", location = "Country Name"))
covid_data %>% inner_join(demographics, by=c(iso_code = "Country Code", location = "Country Name")) %>% View()
colnames(covid_data %>% inner_join(demographics, by=c(iso_code = "Country Code", location = "Country Name")))
colnames(demographics)
colnames(covid_data)
demographics %>% inner_join(covid_data, by=c("Country Code" = "iso_code"))
demographics %>% inner_join(covid_data, by=c("Country Code" = "iso_code")) %>% View()
colnames(demographics %>% inner_join(covid_data, by=c("Country Code" = "iso_code")))
colnames(demographics %>% inner_join(covid_data, by=c(`Country Code` = "iso_code")))
demographics
demographics %>% select(`Country Code`)
demographics %>% inner_join(covid_data, by=c("Country Code"="iso_code"))
demographics %>% inner_join(covid_data, by=c("Country Code"="iso_code")) %>% select(new_deaths_smoothed_2wk)
covid_data %>% inner_join(demographics, by=c(iso_code = "Country Code", location = "Country Name"))
covid_data %>% inner_join(demographics, by=c(iso_code = "Country Code"))
